{"aliases":["default","es5","modernizr:es5array"],"browsers":{"ie":"6 - 8"},"spec":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.every","docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every","baseDir":"Array/prototype/every","hasTests":true,"rawSource":"\n// Array.prototype.every\nArray.prototype.every = function every(callback) {\n\tif (this === undefined || this === null) {\n\t\tthrow new TypeError(this + 'is not an object');\n\t}\n\n\tif (!(callback instanceof Function)) {\n\t\tthrow new TypeError(callback + ' is not a function');\n\t}\n\n\tvar\n\tobject = Object(this),\n\tscope = arguments[1],\n\tarraylike = object instanceof String ? object.split('') : object,\n\tlength = Number(arraylike.length) || 0,\n\tindex = -1;\n\n\twhile (++index < length) {\n\t\tif (index in arraylike && !callback.call(scope, arraylike[index], index, object)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n","minSource":"Array.prototype.every=function(t){if(void 0===this||null===this)throw new TypeError(this+\"is not an object\");if(!(t instanceof Function))throw new TypeError(t+\" is not a function\");for(var n=Object(this),r=arguments[1],i=n instanceof String?n.split(\"\"):n,e=Number(i.length)||0,o=-1;++o<e;)if(o in i&&!t.call(r,i[o],o,n))return!1;return!0};","detectSource":"'every' in Array.prototype"}