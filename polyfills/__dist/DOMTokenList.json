{"aliases":["default"],"browsers":{"ie":"6 - *","safari":"4 - 6.0","ie_mob":"10 - *"},"spec":"http://www.whatwg.org/specs/web-apps/current-work/#domtokenlist","docs":"https://developer.mozilla.org/en/docs/Web/API/DOMTokenList","baseDir":"DOMTokenList","hasTests":false,"rawSource":"\n// DOMTokenList\n(function (global, join, splice) {\n\tvar nativeImpl = \"DOMTokenList\" in global && global.DOMTokenList;\n\n\tfunction tokenize(token) {\n\t\tif (/^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/.test(token)) {\n\t\t\treturn String(token);\n\t\t} else {\n\t\t\tthrow new Error('InvalidCharacterError: DOM Exception 5');\n\t\t}\n\t}\n\n\tfunction toObject(self) {\n\t\tfor (var index = -1, object = {}, element; element = self[++index];) {\n\t\t\tobject[element] = true;\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tfunction fromObject(self, object) {\n\t\tvar array = [], token;\n\n\t\tfor (token in object) {\n\t\t\tif (object[token]) {\n\t\t\t\tarray.push(token);\n\t\t\t}\n\t\t}\n\n\t\tsplice.apply(self, [0, self.length].concat(array));\n\t}\n\n\tif (!nativeImpl) {\n\t\tglobal.DOMTokenList = function DOMTokenList() {};\n\n\t\tglobal.DOMTokenList.prototype = {\n\t\t\tconstructor: DOMTokenList,\n\t\t\titem: function item(index) {\n\t\t\t\treturn this[parseFloat(index)] || null;\n\t\t\t},\n\t\t\tlength: Array.prototype.length,\n\t\t\ttoString: function toString() {\n\t\t\t\treturn join.call(this, ' ');\n\t\t\t},\n\n\t\t\tadd: function add() {\n\t\t\t\tfor (var object = toObject(this), index = 0, token; index in arguments; ++index) {\n\t\t\t\t\ttoken = tokenize(arguments[index]);\n\n\t\t\t\t\tobject[token] = true;\n\t\t\t\t}\n\n\t\t\t\tfromObject(this, object);\n\t\t\t},\n\t\t\tcontains: function contains(token) {\n\t\t\t\treturn token in toObject(this);\n\t\t\t},\n\t\t\tremove: function remove() {\n\t\t\t\tfor (var object = toObject(this), index = 0, token; index in arguments; ++index) {\n\t\t\t\t\ttoken = tokenize(arguments[index]);\n\n\t\t\t\t\tobject[token] = false;\n\t\t\t\t}\n\n\t\t\t\tfromObject(this, object);\n\t\t\t},\n\t\t\ttoggle: function toggle(token) {\n\t\t\t\tvar\n\t\t\t\tobject = toObject(this),\n\t\t\t\tcontains = 1 in arguments ? !arguments[1] : tokenize(token) in object;\n\n\t\t\t\tobject[token] = !contains;\n\n\t\t\t\tfromObject(this, object);\n\n\t\t\t\treturn !contains;\n\t\t\t}\n\t\t};\n\t} else {\n\t\tvar NativeToggle = nativeImpl.prototype.toggle;\n\n\t\tnativeImpl.prototype.toggle = function toggle(token) {\n\t\t\tif (1 in arguments) {\n\t\t\t\tvar\n\t\t\t\tcontains = this.contains(token),\n\t\t\t\tforce = !!arguments[1];\n\n\t\t\t\tif ((contains && force) || (!contains && !force)) {\n\t\t\t\t\treturn force;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn NativeToggle.call(this, token);\n\t\t};\n\n\t}\n\n})(this, Array.prototype.join, Array.prototype.splice);\n","minSource":"!function(t,n,r){function i(t){if(/^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/.test(t))return String(t);throw new Error(\"InvalidCharacterError: DOM Exception 5\")}function o(t){for(var n,r=-1,i={};n=t[++r];)i[n]=!0;return i}function e(t,n){var i,o=[];for(i in n)n[i]&&o.push(i);r.apply(t,[0,t.length].concat(o))}var a=\"DOMTokenList\"in t&&t.DOMTokenList;if(a){var s=a.prototype.toggle;a.prototype.toggle=function(t){if(1 in arguments){var n=this.contains(t),r=!!arguments[1];if(n&&r||!n&&!r)return r}return s.call(this,t)}}else t.DOMTokenList=function(){},t.DOMTokenList.prototype={constructor:DOMTokenList,item:function(t){return this[parseFloat(t)]||null},length:Array.prototype.length,toString:function(){return n.call(this,\" \")},add:function(){for(var t,n=o(this),r=0;r in arguments;++r)t=i(arguments[r]),n[t]=!0;e(this,n)},contains:function(t){return t in o(this)},remove:function(){for(var t,n=o(this),r=0;r in arguments;++r)t=i(arguments[r]),n[t]=!1;e(this,n)},toggle:function(t){var n=o(this),r=1 in arguments?!arguments[1]:i(t)in n;return n[t]=!r,e(this,n),!r}}}(this,Array.prototype.join,Array.prototype.splice);","detectSource":"'DOMTokenList' in this && (function (x) {\n\treturn 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\n})(document.createElement('x'))"}